@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Services.cshtml";
}

@{

    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();

    var pageSize = 10;
    var page = 1; int.TryParse(Request.QueryString["page"], out page);
    var year = 0; int.TryParse(Request.QueryString["year"], out year);
    var lang =  Request.QueryString["lang"] ;
    var kword =  Request.QueryString["word"];
    //kword =" Jehabdulloh ".ToLower();  //test
    kword = kword.ToLower();
    string yearSet="";
    var Type = Request.QueryString["Type"];

    var valuesFilter = new Dictionary<string, object>
    ();

    valuesFilter.Add("Todate", DateTime.Now);
    valuesFilter.Add("year",year);
    string condition = "";
    string sort = "beginDate descending";
    int blogId = 3576;
    int limit=20;
    var items = (dynamic)null;

    if (Type == "OnView")
    {
    condition = "  Visible && (beginDate <= Todate) && (endDate >= Todate)";

    items = Umbraco.Media(blogId).Children().Where(condition, valuesFilter).OrderBy("endDate");

    }
    else if (Type == "Upcoming")
    {
    @*All*@
    condition = "Visible && (beginDate > Todate)";

    items = Umbraco.Media(blogId).Children().Where(condition, valuesFilter).OrderBy(sort);
    }
    else if (Type == "Past")
    {

    //condition ="(from < Todate) && (!( (from <= Todate) && (to >= Todate)))";

    //items =  Umbraco.Content(blogId).Children().Where(condition,valuesFilter).OrderBy(sort);

    condition = "Visible && (beginDate < Todate) && (!( (beginDate <= Todate) && (endDate >= Todate)))";

    if  (year >0)
    {
    condition += " and ((beginDate.Year=year) or (endDate.Year=year))";
    }

    condition += " && (descriptionEn.ToLower().Contains(\""+kword+"\") || nameEn.ToLower().Contains(\""+kword+"\"))";
    //condition += " && (descriptionTh.ToLower().Contains(\""+kword+"\") || nameTh.ToLower().Contains(\""+kword+"\"))";

    //#For หาจาก ศิลปิน ====================================================================================
    if (kword.Trim() !="")
    {
    var artisList=Umbraco.Media(1366).Children().Where("NameEn.ToLower().Contains(\""+kword+"\")").Take(limit);

    List<string>
        listFilterEx = new List<string>
            ();
            foreach (var item in artisList)
            {
            //@item.id

            //Art Pieces ชิ้นงาน
            var ArtPiecesList=Umbraco.Media(item.id).Children().Take(limit);;
            foreach (var i in ArtPiecesList)
            {
            // ชิ้นงานดพื่อหา Ex
            //@i.id
            listFilterEx.Add("artPieces2.ToString().Contains(\""+i.id+"\")");
            }

            }//end loop

            //For หาจาก ชิ้นงาน ==================
            var itemsartPiecesMedia = Umbraco.Media(1366).Descendants("artPiecesMedia").Where("NameEn.ToLower().Contains(\""+kword+"\")");
            foreach (var i in itemsartPiecesMedia)
            {
            // ชิ้นงานดพื่อหา Ex
            //@i.id
            listFilterEx.Add("artPieces2.ToString().Contains(\""+i.id+"\")");
            }

            //หา Ex จากชิ้นงานด้วย
            if (listFilterEx.Count> 0)
            {
            condition +=  " || ("   +string.Join<string>
                (" || ", listFilterEx) + ")";}
                //#For หาจาก ศิลปิน ====================================================================================

                //#For หาจาก ชิ้นงาน ====================================================================================
    }
                items = Umbraco.Media(blogId).Children().Where(condition, valuesFilter).OrderBy(sort);

                //หา Year
                List<int>
                    list = new List<int>
                        ();

                        foreach (var item in items)
                        {
                        @* a single image *@

                        int a= item.beginDate.Year;
                        int b=item.endDate.Year;
                        list.Add(a);
                        list.Add(b);
                        }

                        var noDupes = list.Distinct().ToList();
                        noDupes.Sort();
                        yearSet=   String.Join(",", noDupes.ToArray());
                        }

                        var totalPages = (int)Math.Ceiling((double)items.Count() / (double)pageSize);

                        if (page > totalPages)
                        {
                        @*ถ้าเรียกมามากกว่า*@
                        page = totalPages;
                        }
                        else if (page < 1)
                        {
                        @*ถ้าเรียกมาน้อยกว่า*@
                        page = 1;
                        }

                        var jsonDataList = JsonFn.ConvertToJsonObject(items.Skip((page - 1) * pageSize).Take(pageSize));

                        jsonDataList.Add(new Dictionary<string, object>
                            {            {"RecordCount",items.Count()},  {"year",yearSet}

                            });

                            }
                            @* @Html.Raw(serializer.Serialize(items.Count())) *@
                            @*Html.Raw(serializer.Serialize(@JsonFn.ConvertToJsonObject(items.Skip((page -1)* pageSize).Take(pageSize))))*@
                            @*@Html.Raw(serializer.Serialize(node.Properties));*@
                            @*Json*@
                            @Html.Raw(serializer.Serialize(jsonDataList))