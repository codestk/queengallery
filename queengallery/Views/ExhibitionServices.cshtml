@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Services.cshtml";
}

@{

    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();

    var pageSize = 10;
    var page = 1; int.TryParse(Request.QueryString["page"], out page);

    var Type = Request.QueryString["Type"];

    var valuesFilter = new Dictionary<string, object>();

    valuesFilter.Add("Todate", DateTime.Now);

    string condition = "";
    string sort = "endDate descending";
    int blogId = 3576;

    var items = (dynamic)null;

    if (Type == "OnView")
    {
        condition = "  Visible && (beginDate <= Todate) && (endDate >= Todate)";

        items = Umbraco.Media(blogId).Children().Where(condition, valuesFilter).OrderBy("beginDate");

    }
    else if (Type == "Upcoming")
    {
    @*All*@
    condition = "Visible && (beginDate > Todate)";

    items = Umbraco.Media(blogId).Children().Where(condition, valuesFilter).OrderBy(sort);
    }
    else if (Type == "Past")
    {

    //condition ="(from < Todate) && (!( (from <= Todate) && (to >= Todate)))";

    //items =  Umbraco.Content(blogId).Children().Where(condition,valuesFilter).OrderBy(sort);

    condition = "Visible && (beginDate < Todate) && (!( (beginDate <= Todate) && (endDate >= Todate)))";

    items = Umbraco.Media(blogId).Children().Where(condition, valuesFilter).OrderBy(sort);
}

var totalPages = (int)Math.Ceiling((double)items.Count() / (double)pageSize);

if (page > totalPages)
{
    @*ถ้าเรียกมามากกว่า*@
    page = totalPages;
}
else if (page < 1)
{
    @*ถ้าเรียกมาน้อยกว่า*@
    page = 1;
}

var jsonDataList = JsonFn.ConvertToJsonObject(items.Skip((page - 1) * pageSize).Take(pageSize));

jsonDataList.Add(new Dictionary<string, object>
        {            {"RecordCount",items.Count()}

        });

}
@* @Html.Raw(serializer.Serialize(items.Count())) *@
@*Html.Raw(serializer.Serialize(@JsonFn.ConvertToJsonObject(items.Skip((page -1)* pageSize).Take(pageSize))))*@
@*@Html.Raw(serializer.Serialize(node.Properties));*@
@*Json*@
@Html.Raw(serializer.Serialize(jsonDataList))