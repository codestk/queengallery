@inherits Umbraco.Web.Macros.PartialViewMacroPage

@{
    string condition = "";
    /*ใหม่กว่าขึ้นมาก่อน*/
    @*string sort = "BeginDate descending ";*@
   string sort = "endDate  ";

    
   /*Exhibitions*/
   /*Announcement*/
   var lang=Umbraco.GetDictionaryValue("language");
   var ExhibitionsFolder = Model.MacroParameters["Exhibitions"];
   var ExhibitionsId = Model.MacroParameters["ExhibitionId"];
   var AnnouncementId = Model.MacroParameters["Announcement"];
   var showAnnouncementOnly =Model.MacroParameters["showAnnouncementOnly"];
   var showText =Model.MacroParameters["showText"];
   var TextColor =Model.MacroParameters["TextColor"];
    var Imageheight= Model.MacroParameters["Imageheight"].ToString();
   var FixSize= Model.MacroParameters["FixSize"].ToString();    


var ImageCropType= Model.MacroParameters["ImageCropType"];
string height="450px;";

string backgroundPosition="";

  if (TextColor!="")
   {
   TextColor= "color:"+@TextColor.ToString();
   }

  if(FixSize.Equals("1"))
  {
  backgroundPosition="background-position: center;";
  }
 
if (Imageheight != "null")
{
height =Imageheight+"px";
}
 

    /*Youtube*/
    var YoutubeContent = Model.MacroParameters["YoutubeContent"];
    var YoutubeId   = Model.MacroParameters["YoutubeId"];
    var YoutubeHead = Model.MacroParameters["YoutubeHead"];
    var YoutubeShow = Model.MacroParameters["YoutubeShow"];

    var items = (dynamic)null;

    var valuesFilter = new Dictionary<string, object>
    ();

    valuesFilter.Add("Todate", DateTime.Now);

    condition = "Visible && (beginDate <= Todate) && (endDate >= Todate)";

    /*Show Announcement Only*/
    if(showAnnouncementOnly.Equals("1"))
    {
   
    items = Umbraco.Media(AnnouncementId).Children().OrderBy(sort).Take(5);
    }
    else if(ExhibitionsId !="")
    {  var ex = Umbraco.Media(ExhibitionsFolder).Children().Where("id=="+ExhibitionsId.ToString());
          
   if (ex.Count()>0)
                                         {items=ex;}
      
                                     
    }
     
     /*Auto*/
    if  (items==null)
    {
  
    items = Umbraco.Media(ExhibitionsFolder).Children().Where(condition,valuesFilter).OrderBy(sort).Take(5);

    /*Swap Anouce*/
    if(items.Count()==0)
    {
    items = Umbraco.Media(AnnouncementId).Children().Where("Visible").OrderBy(sort).Take(1);
    }
    }/*End Auto*/

    }

    <script src="~/Modules/pure-css-based-fullscreen-slider/com/js/jquery.easing.1.3.js"></script>

    <link href="~/Modules/Slider/css/slide.css" rel="stylesheet" />

    <div class="css-slider" style="height:@height">

        @{

        int itemID=1;

        if(YoutubeShow.Equals("1")){
        <input type="radio" name="slider-navigation" checked="checked" id="youtube" style="display:none" />
        }
        else{

        /*Nomal*/

        string checkedVal="";
        foreach(dynamic item in items)
        {
        if (itemID==1)
        {
        checkedVal="checked";
        }else
        {
        checkedVal="";
        }
        string inputID="slide" + itemID.ToString();
        @* More One Item*@

        <input type="radio" name="slider-navigation" checked="@checkedVal" id="@inputID" />

        itemID =itemID+1;
        }

        }

        }  @*End*@

        <div class="css-slider-navigation">
            @{

            if(YoutubeShow.Equals("1"))
            {
            <label class="css-slider-navigation-item" for="youtube" style="display:none"></label>
            }
            else
            {
            itemID=1; /*Reset ID*/

            foreach(dynamic item in items)
            {
            string slideID="slide"+itemID.ToString();
            if (items.Count() >1)
            {
            <label class="css-slider-navigation-item" for="@slideID" data-id="@itemID"></label>
            }

            itemID =itemID+1;
            }

            }

            }  @*End*@

            <div class="tp-svg-innercontainer"><svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" viewBox="0 0 36 36" style="fill: rgb(255, 255, 255); stroke-dashoffset: 0px; stroke-dasharray: 0; stroke-width: 0px; stroke: rgba(255, 255, 255, 0);"><path d="M24.88 12.88L18 19.76l-6.88-6.88L9 15l9 9 9-9z"></path></svg></div>
        </div>
        <div class="css-slider-wrapper">
            <div class="css-slider-inner " style="line-height:normal;">

                @{

                /*Youtube*/
                if (YoutubeShow.Equals("1"))
                {
                <div class="css-slider-item" style="text-shadow: 0 0 15px black;  height:@height;   ">
                    <div class="video-background">
                        <div class="video-foreground">
                            <iframe id="ytplayer" src="https://www.youtube.com/embed/@YoutubeId?controls=0&showinfo=0&rel=0&html5=1&autoplay=1&loop=1&playlist=W0LHTWG-UmQ" frameborder="0" allowfullscreen></iframe>
                        </div>
                    </div>

                    <div id="vidtop-content">
                        <div class="vid-info">
                            <h1>@YoutubeHead</h1>
                            <p>&nbsp;</p>
                            <p>@YoutubeContent</p>
                        </div>
                    </div>
                </div>

                }
                else

                {
                /*Normal Case*/
                foreach(dynamic item in items)
                {
               
                string Name = item.GetPropertyValue("name" +lang);
                string imageUrl="";
                if (ImageCropType=="")
                {
                  imageUrl=item.image.src;
                }
                else
                {
                  imageUrl=item.GetCropUrl("image", ImageCropType);
               
                }

                @*string imageUrl=item.image.src;*@

                @*
                string imageUrl=item.GetCropUrl("image", "banner");*@

              
                    <div class="css-slider-item pointer" style="text-shadow: 0 0 15px black; background-image: url(@imageUrl);@backgroundPosition;" onclick="javascript:redirect('@item.id');"  >
                     
                            <div class="css-slider-item-inner" style=" width:100%;" >
                                <div class="slide-title" style=" @TextColor"> 
                                    @{

                                    if    (showText.Equals("1"))
                                    {
                                    @Name
                                    }

                                    }
                                </div>
                                <div class="slide-subtitle">
                                    @{

                                    if(showText.Equals("1"))
                                    {
                                    <h2>  </h2>
                                    }

                                    }
                                </div>
                            </div>
                      
                </div>
              
                }
                }

                }
            </div>
        </div>
    </div>

    @{
    if(YoutubeShow.Equals("1")==false) {
    <script>
        $(window).on("load", function () {

            // Executes when complete page is fully loaded, including
            // all frames, objects and images
            var nIntervId;
            var lb = $('.css-slider  input:radio[name="slider-navigation"]');

            var len = lb.length;
            var i = 0;

            function slideItem() {

                if (i == len)
                    i = 0;

                lb[i].checked = true;

                i = i + 1;

            }

            $('.css-slider-navigation>label').on("click", function () {

               
                i = this.getAttribute('data-id');
              
                clearInterval(nIntervId);
                //Innit New Interval plus delay
                nIntervId = setInterval(slideItem, 10000);

            });
            function changeSlide() {
                if (len > 0) {
                    nIntervId = setInterval(slideItem, 5000);
                }

            }
            function stopchangeSlide() {
                clearInterval(nIntervId);
            }

            changeSlide();
        });
    </script>
    }

    }


    <script>
        function redirect(id)
        {
            var url='';
            var lang = '@Umbraco.Field("#RootUrl")';
            url= '/'+lang+'/exhibitions/past/exhibition?exhibition='+id;
            debugger
            window.location.replace(url);
        
  
        }

    </script>