@inherits Umbraco.Web.Macros.PartialViewMacroPage

 
<script src="/Modules/paginate/jquery.simplePagination.js"></script>
<link href="/Modules/paginate/simplePagination.css" rel="stylesheet" />
<script src="/Modules/Pws/PWSCallService.js"></script>
<script src="/Modules/mustache/mustache.js"></script>
<script src="/Modules/UmbracoImage/UmbracoImage.js"></script>
@*<script src="~/Modules/js-base64-master/base64.js"></script>*@
@*<script src="~/scripts/PwsExhibitions.js"></script>*@


<!--ReadMore-->
<link href="~/Modules/ReadMore/ReadMore.css" rel="stylesheet" />

<script src="~/Modules/ReadMore/ReadMore.js"></script>


<!--Datejs-->
<script src="~/Modules/Datejs-master/build/date.js"></script>
@{
var curNode = Umbraco.TypedContent(Model.Content.Id);
var nodeLang = curNode.GetCulture().ToString().ToLower();
var ShowHead = Model.MacroParameters["ShowHead"];

}
@if  (nodeLang == "th-th")
{
<script src="~/Modules/Datejs-master/build/date-th-TH.js"></script>
}


<script>

    var PageIndex = '1';
    var PageSize = '10';
    var menuType = 'OnView';
    var CurrentListData;

    $(document).ready(function () {
        //prevent loade complete
        $(window).unbind("load");

        //Preload();
        menuType = 'OnView';
        // initEvent();

        RenderList();
    });

    /*==Render List and Page*/

    function RenderList() {

        //Render List
	 
        var url = 'ExhibitionServices?page=' + PageIndex + '&Type=' + menuType;
        Preload();
        CallServices(url, '', true, function (msg) {

            //Reder Data ListTemplate
            //console.log(msg);
             
            CurrentListData = ConvertDataByLanguage(msg[0]);

            SetList(CurrentListData);

          

            //Create Event in list
            if (msg[0].length > 0) {
                
                ReadMore.showMore = false;
                ReadMore.BindEvent();
            }
        });

    }

    /*Render Data*/
    function SetList(msg) {
        if (msg.length > 0) {    /*Show Event By Navigation*/
            var template = $('#ListTemplate').html();
            Mustache.parse(template);   // optional, speeds up future uses

            //msg = ConvertDataByLanguage(msg);

            var rendered = Mustache.render(template, { Data: msg });
            $('#divList').html('');
            $('#divList').html(rendered).html(rendered).imagesLoaded().then(function () {
                // do stuff after images are loaded here
                LoadCompelete();
            });
            //.fail(function () {
            //    // do stuff if any one of the images fails to load
            //    LoadCompelete();
            //});

        } else {
            /*Display No data Display*/
            var template = $('#NoEventTemplate').html();
            var rendered = Mustache.render(template);
            $('#divList').html('');
            $('#divList').html(rendered).imagesLoaded().then(function () {
                // do stuff after images are loaded here
                LoadCompelete();
            });
        }

    }

    //Set Pagger
  

    /*Convert Data*/
    function ConvertDataByLanguage(data) {
        //var arrayPosition = 0;
        for (var key in data) {
            //preFixLang
            //var preFixLang = 'En';
            data[key]["name"] = data[key]["name" + preFixLang];
            data[key]["title"] = data[key]["title" + preFixLang];
            data[key]["introduction"] = data[key]["introduction" + preFixLang];
            data[key]["description"] = data[key]["description" + preFixLang];

            var ImageUmbracoString = data[key]["image"];

            data[key]["logoUrl"] = UmbracoImageUrl(ImageUmbracoString);

            var daetFormat = 'd MMM yyyy';
            var dateFrom = new Date(data[key]["beginDate"]);
            var from = dateFrom.toString(daetFormat); // "April 12th, 2008"
            data[key]["from"] = from;

            var dateTo = new Date(data[key]["endDate"]);

            var to = dateTo.toString(daetFormat); // "April 12th, 2008"

            data[key]["to"] = to;
            data[key]["id"] = data[key]["__NodeId"];
            
   
        }

        return data;
    }

 
   
  
</script> 






<section id="Main">
    <div class="text-center ">
         @*<h1 ><strong>OnView</strong></h1>*@

        @{if (ShowHead.Equals("1"))
        {
        <h1><strong>@Umbraco.Field("#ONVIEW")</strong></h1>
      
        }
        }
       
        <div id="divList" class="text-center row ">


        </div>
    </div>
</section>



    <!-- Template -->
    <script id="ListTemplate" type="x-tmpl-mustache">

        {{#Data}}
       
            <div class="col-lg-12  DixBox"  >

                <h2>{{name}}</h2>
                <img src='{{logoUrl}}' class="img-responsive img-center  ">

            </div>
            <div class="col-lg-12">


              
                <p class="date">{{from}} - {{to}}</p>

                <p class="more">{{description}} </p>

                @*<a class="btn btn-primary waves-effect waves-light boxShadow" href='/en/exhibitions/past/exhibition/'>Read more</a>*@
                <a class="button  " href='/@Umbraco.Field("#RootUrl")/exhibitions/past/exhibition?exhibition={{id}}'>@Umbraco.Field("#ReadMore")</a>
                
            </div>
        <div class="col-lg-12">
            <div class="seperator"> </div>

        </div>

            {{/Data}}

</script>

    <script id="NoEventTemplate" type="x-tmpl-mustache">

        <div class="row">
            <hr>
            <div class="col-lg-12   ">
             
                <div class="message">@Umbraco.Field("#EventNotFound") </div>
            </div>
        </div>
    </script>
    <!-- /Template -->
    <!-- Modal -->
    <div class="modal fade" id="imagemodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" style="z-index:1050">
            <div class="modal-content">
                <div class="modal-body">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <img src="" class="imagepreview" style="width: 100%;">
                </div>
            </div>
        </div>
    </div>

