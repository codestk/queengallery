@inherits Umbraco.Web.Macros.PartialViewMacroPage

@*
    Macro to display a gallery of images from media the media section.
    Works with either a 'Single Media Picker' or a 'Multiple Media Picker' macro parameter (see below).

    How it works:
        - Confirm the macro parameter has been passed in with a value
        - Loop through all the media Id's passed in (might be a single item, might be many)
        - Display any individual images, as well as any folders of images

    Macro Parameters To Create, for this macro to work:
    Alias:mediaIds     Name:Select folders and/or images    Type: Multiple Media Picker
       var mediaIds = Model.MacroParameters["mediaIds"];                                                      Type: (note: you can use a Single Media Picker if that's more appropriate to your needs)
*@
<script src="~/Modules/jquery-match-height-master/dist/jquery.matchHeight-min.js"></script>

@{
var curNode = Umbraco.TypedContent(Model.Content.Id);
			string nodeLang = curNode.GetCulture().ToString().ToLower();

 var id = 5463; int.TryParse(Request.QueryString["id"], out id);

id = 5463;

    int blogId = 3576;
      var item= (dynamic)null;
 string condition = "Id ="+id.ToString();

  item= Umbraco.Media(blogId).Children().Where(condition);
 var   mediaIds=item.First().GetPropertyValue("artPieces2");

}
@if (mediaIds != null)
{

<div class="col-lg-12 text-center">
    <h1>Art Pieces </h1>
    @foreach (var mediaId in mediaIds.ToString().Split(','))
    {

    var media = Umbraco.Media(mediaId);

    @* a single image *@
    if (media.DocumentTypeAlias == "artPiecesMedia")
    {

    @Render(media,nodeLang);
    }

 

    }
 
</div>
}

@helper Render(dynamic item,string nodeLang)
{
string  name="";
string description="";
		if (nodeLang == "th-th") {
				name = @item.nameTh;
description=@item.descriptionTh;
			} else {
				name =@item.nameEn;
description=@item.descriptionEn;
			}
<div class="col-lg-4  text-center matchHeight">
    @*<a href="/en/exhibitions/past/artpiece/">
        <figure class="snip1554 ">
            <img class="img-responsive  img-center " src="@item.image.src" alt="">

            <figcaption>
            </figcaption>
        </figure>
        <h4 class="NoPaddingNoMargin">@item.Name</h4>
    </a>*@

    <figure class="snip1360">
        <img src="@item.image.src" alt="sample88" class="img-responsive  img-center" />
        <figcaption>
            <h2>@name</h2>
            <p>I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello? </p><a href="#modal" class="read-more EventModal">Read More</a>
        </figcaption>
    </figure>
</div>

}

<!--Modal-->


<div id="modal" class=" ">
  

    
    <!--"THIS IS IMPORTANT! to close the modal, the class name has to match the name given on the ID-->
    @*<div id="btn-close-modal" class="close-modal ">
        CLOSE MODAL
    </div>*@

    <div id="btn-close-modal" class="close-modal text-center modalHead">

        <img class="closebt" src="~/Modules/animatedModal.js-master/closebt.svg" />
    </div>
    <section class="transformSkewY">
        @*modal-content*@
        <div class="text-center  ">
            <!--Your modal content goes here-->
            <img class="imagepreview" src="http://localhost:17606/media/8456/picture.jpg" />
            <h1>Name</h1>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
        </div>
        </section>
    <section class="transformSkewY01">
        @*modal-content*@
        <div class="text-center  ">
            <!--Your modal content goes here-->
            <img class="imagepreview" src="http://localhost:17606/media/8456/picture.jpg" />
            <h1>Name</h1>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
            <p> I'm looking for something that can deliver a 50-pound payload of snow on a small feminine target. Can you suggest something? Hello?</p>
        </div>
    </section>
</div>
 
<!--SimpleModal-->

<link href="~/Modules/animatedModal.js-master/demo/css/animate.min.css" rel="stylesheet" />
    @*
<link href="~/Modules/animatedModal.js-master/demo/css/normalize.min.css" rel="stylesheet" />*@
<script src="~/Modules/animatedModal.js-master/animatedModal.js"></script>


<script>
    $(function () {
        //$('.matchHeight').matchHeight({
        //    byRow: false,remove: false
        //}  );
    });

    $(document).ready(function () {

        $('.matchHeight').matchHeight({
            byRow: false, remove: false
        });
        ModalEvent();

    });
    function ModalEvent() {

        //$('.EventModal').on('click', function () {

        //    $('.imagepreview').attr('src', $(this).find('img').attr('src'));
        //    $('#imagemodal').modal('show');
        //});

        //animatedIn: bounceIn
        //animatedOut: bounceOut
        $('.EventModal').on('click', function () {

            $('.imagepreview').attr('src', $(this).find('img').attr('src'));
            console.log('ggg');
        });

        $(".EventModal").animatedModal({
            modalTarget: 'modal',
            animatedIn: 'rollIn',
            animatedOut: 'rollOut',

            //animatedIn: 'fadeInUp',
            //animatedOut: 'fadeOutDown',
            //color: '#444444',
           

            //color: 'rgba(109,109,112,0.9)',
            //color: 'rgba( 77,75,76,0.5)',

            // Callbacks
            beforeOpen: function () {
                // $('.imagepreview').attr('src', $(this).find('img').attr('src'));

                //console.log("The animation was called");
            },
            afterOpen: function () {
                //console.log("The animation is completed");
            },
            beforeClose: function () {
                //console.log("The animation was called");
            },
            afterClose: function () {
                //console.log("The animation is completed");
            }
        });

    }
</script>