@inherits Umbraco.Web.Macros.PartialViewMacroPage

@*
    Macro to display a gallery of images from media the media section.
    Works with either a 'Single Media Picker' or a 'Multiple Media Picker' macro parameter (see below).

    How it works:
        - Confirm the macro parameter has been passed in with a value
        - Loop through all the media Id's passed in (might be a single item, might be many)
        - Display any individual images, as well as any folders of images

    Macro Parameters To Create, for this macro to work:
    Alias:mediaIds     Name:Select folders and/or images    Type: Multiple Media Picker
       var mediaIds = Model.MacroParameters["mediaIds"];                                                      Type: (note: you can use a Single Media Picker if that's more appropriate to your needs)
*@


@{
var curNode = Umbraco.TypedContent(Model.Content.Id);
string nodeLang = curNode.GetCulture().ToString().ToLower();

 var lang=Umbraco.GetDictionaryValue("language");
 var ExhibitionFolder = Model.MacroParameters["ExhibitionFolder"];
var TextHead = Model.MacroParameters["TextHead"];

  

var Random = Model.MacroParameters["Random"];

 int ItemCount = 100; int.TryParse(Model.MacroParameters["ItemCount"].ToString(), out ItemCount);
if (ItemCount==0)
{
 ItemCount = 100;
}

 int  exhibitionID = 0; int.TryParse(Request.QueryString["id"], out exhibitionID);

if (exhibitionID==0)
{
 exhibitionID = 5463;
}

 var item= (dynamic)null;
 string condition = "Id ="+exhibitionID.ToString();

 /*Get Exhibition*/
 item= Umbraco.Media(ExhibitionFolder).Children().Where(condition)  ;
 var   mediaIds=item.First().GetPropertyValue("artPieces2");

  string Temp= mediaIds.ToString();
  string  mediaReorder = "";
    if    (Random.Equals("1"))
   {
  mediaReorder= string.Join(",", Temp.ToString().Split(',').OrderBy(x => System.Guid.NewGuid()).Take(ItemCount));
   }else
{
  mediaReorder= string.Join(",", Temp.ToString().Split(',').Take(ItemCount));
}

}
@if (mediaIds != null)
{
<h1>@TextHead</h1>
<div class="row-marson text-center">

    @foreach (var mediaId in mediaReorder.ToString().Split(','))
    {

    var media = Umbraco.Media(mediaId);
    var  artTistMedia =Umbraco.Media(media.ParentId);
    @* a single image *@
    <!-- Left and right controls -->
    if (artTistMedia.DocumentTypeAlias == "ArtistsMedia")
    {

    @Render(artTistMedia,nodeLang);
    }

    }
</div>
}

@helper Render(dynamic item,string nodeLang)
{

string  name="";
string description="";
		if (nodeLang == "th-th") {
				name = @item.nameTh;
description=@item.descriptionTh;
			} else {
				name =@item.nameEn;
description=@item.descriptionEn;
			}
var ShowDetail = Model.MacroParameters["ShowDetail"];
var ShowMore = Model.MacroParameters["ShowMore"];
string More="";
if (ShowMore.Equals("1"))
{
More="more";
}

<div class="col-lg-4  matchHeight" style="margin-bottom:40px;">

    <figure class="snip1554  ">

        <img class="img-circle img-responsive img-center" src="@item.GetCropUrl("image", "avatar" )" onerror="this.src = '/media/9280/untitled-3.png?anchor=center&mode=crop&width=300&height=300&rnd=131258854960000000'" alt="@name" />
        <figcaption>
            <h3></h3>
        </figcaption>
        <a href="/en/exhibitions/past/artist?artist=@item.id">  @item.GetCropUrl(item, "avatar", true)</a>
    </figure>

    <h2>@name</h2>
    @if    (ShowDetail.Equals("1"))
    {
    <p class="@More">@description</p>
    }
  
</div>
}



<script src="~/Modules/jquery-match-height-master/dist/jquery.matchHeight-min.js"></script>
<link href="~/Modules/ReadMore/ReadMore.css" rel="stylesheet" />
<script src="~/Modules/ReadMore/ReadMore.js"></script>
<script>
    $(function () {
        $('.matchHeight').matchHeight({
            byRow: true, remove: false
        });

        ReadMore.showMore = false;
        ReadMore.BindEvent();
    });
</script> 