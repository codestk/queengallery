@inherits Umbraco.Web.Macros.PartialViewMacroPage

@*
    Macro to display a gallery of images from media the media section.
    Works with either a 'Single Media Picker' or a 'Multiple Media Picker' macro parameter (see below).

    How it works:
        - Confirm the macro parameter has been passed in with a value
        - Loop through all the media Id's passed in (might be a single item, might be many)
        - Display any individual images, as well as any folders of images

    Macro Parameters To Create, for this macro to work:
    Alias:mediaIds     Name:Select folders and/or images    Type: Multiple Media Picker
       var mediaIds = Model.MacroParameters["mediaIds"];                                                      Type: (note: you can use a Single Media Picker if that's more appropriate to your needs)
*@


@{
 


var curNode = Umbraco.TypedContent(Model.Content.Id);
string nodeLang = curNode.GetCulture().ToString().ToLower();

var lang=Umbraco.GetDictionaryValue("language");
var ExhibitionFolder = Model.MacroParameters["ExhibitionFolder"];
var TextHead = Model.MacroParameters["TextHead"];
var ShowAuto = Model.MacroParameters["ShowAuto"];
var Exhibition = Model.MacroParameters["Exhibition"];
var Random = Model.MacroParameters["Random"];

int ItemCount = 100; int.TryParse(Model.MacroParameters["ItemCount"].ToString(), out ItemCount);
if (ItemCount==0)
{
 ItemCount = 100;
}

int exhibitionID = 0; 
  if (ShowAuto.Equals("1"))
{
    string sort = "beginDate";

    var valuesFilter = new Dictionary<string, object>
    ();

    valuesFilter.Add("Todate", DateTime.Now);

    var  exhibitionitems = Umbraco.Media(ExhibitionFolder).Children().Where( "(beginDate <= Todate) && (endDate >= Todate)", valuesFilter).OrderBy(sort).Take(1);

    exhibitionID = exhibitionitems.First().id;

    }else  if  (Request.QueryString["exhibition"]!=null)
    {
    int.TryParse(Request.QueryString["exhibition"], out exhibitionID);
    }
    else if (Exhibition !=null)
    {
    
    var ExhibitionMedia  =Umbraco.Media(Exhibition);

   
    if (ExhibitionMedia.DocumentTypeAlias=="exhibitionsMedia")
    {
                                                            
    int.TryParse(ExhibitionMedia.id.ToString(), out exhibitionID); 
    }                                         
    
    }else
    {
    exhibitionID=0;
    }
  
    if (exhibitionID==0)
    {
    return; /*Nodata*/
    }
 
        var item= (dynamic)null;
        string condition = "Id ="+exhibitionID.ToString();

        /*Get Exhibition*/
        item= Umbraco.Media(ExhibitionFolder).Children().Where(condition)  ;
        var mediaIds=item.First().GetPropertyValue("artPieces2");

        string artistList= "";
        /*Find Arttist*/
        foreach (var mediaId in mediaIds.ToString().Split(','))
        {

    
        var media = Umbraco.Media(mediaId).ParentId;

        //Check Nodata
        var mediaNode = Umbraco.TypedMedia(mediaId);

        if (mediaNode !=null)
        {

        var artTistMedia =Umbraco.Media(media);
         @*<div>@artTistMedia.DocumentTypeAlias @artTistMedia.id   GOGOGOGO </div>*@
       artistList+="," +artTistMedia.id.ToString()+",";

        @*artistList="," +media.ToString()+","; *@
                                        
        }
        else
        {
        <div id="DivDataNoFound" class="col-lg-12 text-center">@Umbraco.Field("#NoData")</div>

        <script>
            $(function () {
                $("#DivDataNoFound").parent().parent().parent().parent().parent().hide();
            });
        </script>

        return;
        }
        }


   

        string  mediaArtistReorder = "";
	
	     string[] artistListArray= artistList.Split(new string[] {","}, StringSplitOptions.RemoveEmptyEntries);
        if (Random.Equals("1"))
        {
        mediaArtistReorder= string.Join(",", artistListArray.Distinct().OrderBy(x => System.Guid.NewGuid()).Take(ItemCount));
        }else
        {
        mediaArtistReorder= string.Join(",", artistListArray.Distinct().Take(ItemCount));
        }

        }

     

        @if (mediaArtistReorder != "")
        {
                                         if (TextHead !=null)
                                         {
                                        /*Render Head*/
                                         <div class="text-center">
                                             <h1>@TextHead</h1>
                                         </div>
                                         }

                                        
                                             <div class="Artist text-center">

                                                 @foreach (var mediaId in mediaArtistReorder.ToString().Split(','))
                                                 {

                                                 var artTistMedia = Umbraco.Media(mediaId);

                                               
                                                 @*var  artTistMedia =Umbraco.Media(media.ParentId);*@
                                                 @* a single image *@
                                                 <!-- Left and right controls -->
                                                 if (artTistMedia.DocumentTypeAlias == "ArtistsMedia")
                                                 { 

                                                 @Render(artTistMedia,nodeLang);
                                                 }

                                                 }
                                             </div>
                                             }

                                             @helper Render(dynamic item,string nodeLang)
                                             {

                                             string  name="";
                                             string description="";
                                             if (nodeLang == "th-th") {
                                             name = @item.nameTh;
                                             description=@item.descriptionTh;
                                             } else {
                                             name =@item.nameEn;
                                             description=@item.descriptionEn;
                                             }
                                             var ShowDetail = Model.MacroParameters["ShowDetail"];
                                             var ShowMore = Model.MacroParameters["ShowMore"];
                                             string More="";
                                             if (ShowMore.Equals("1"))
                                             {
                                             More="more";
                                             }



                                             <div class="col-lg-4  matchHeight" style="margin-bottom:40px;">

                                                 <figure class="snip1554">

                                                     <img class="img-circle img-responsive img-center" src="@item.GetCropUrl("image", "avatar" )" onerror="this.src = '/media/43697/avatar.png'" alt="@name" />
                                                     <figcaption>
                                                         <h3></h3>
                                                     </figcaption>
                                                     <a href="/@Umbraco.Field("#RootUrl")/exhibitions/past/artist?artist=@item.id">  @item.GetCropUrl(item, "avatar", true)</a>
                                                 </figure>

                                                 <h2>@name</h2>
                                                 @if    (ShowDetail.Equals("1"))
                                                 {
                                                 <p class="@More">@description</p>
                                                 }

                                             </div>
                                             }



                                             <script src="~/Modules/jquery-match-height-master/dist/jquery.matchHeight-min.js"></script>
                                             <link href="~/Modules/ReadMore/ReadMore.css" rel="stylesheet" />
                                             <script src="~/Modules/ReadMore/ReadMore.js"></script>
                                             <script>
                                                 $(function () {
                                                     ReadMore.showMore = false;
                                                     ReadMore.BindEvent();

                                                     //Afert ReadMore
                                                     $('.Artist .matchHeight').matchHeight({
                                                         byRow: true,
                                                         property: 'height',
                                                         //target: true,
                                                         remove: false,
                                                         //property: 'min-height'
                                                     });

                                                   
                                                 });
                                             </script>
