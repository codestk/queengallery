@inherits Umbraco.Web.Macros.PartialViewMacroPage

@*
    Macro to display a gallery of images from media the media section.
    Works with either a 'Single Media Picker' or a 'Multiple Media Picker' macro parameter (see below).

    How it works:
        - Confirm the macro parameter has been passed in with a value
        - Loop through all the media Id's passed in (might be a single item, might be many)
        - Display any individual images, as well as any folders of images

    Macro Parameters To Create, for this macro to work:
    Alias:mediaIds     Name:Select folders and/or images    Type: Multiple Media Picker
       var mediaIds = Model.MacroParameters["mediaIds"];                                                      Type: (note: you can use a Single Media Picker if that's more appropriate to your needs)
*@


@{

if (Request.QueryString["artist"]==null)
{return;
}

var curNode = Umbraco.TypedContent(Model.Content.Id);

string nodeLang = curNode.GetCulture().ToString().ToLower();

  
 
var id = 0; int.TryParse(Request.QueryString["artist"], out id);

 

 /*int Artists = 0; int.TryParse(Model.MacroParameters["Artists"].ToString(), out Artists);  */    
var TextHead=Model.MacroParameters["TextHead"];
 string condition = "Id ="+id.ToString();

var items= Umbraco.Media(id).Children() ;
 
}
@if (items.Count()> 0)
{

<div class="text-center ">
   
    @{if (TextHead !=null)
    {
    <h1>@TextHead </h1>
    }
    }


    <div class="row-marson">
        @foreach (var artPieces in items)
        {

 

        @* a single image *@
        if (artPieces.DocumentTypeAlias == "artPiecesMedia")
        {

        @Render(artPieces,nodeLang);
        }

        }
    </div>
</div>

}

@helper Render(dynamic item,string nodeLang)
{
string  name="";
string description="";
		if (nodeLang == "th-th") {
				name = @item.nameTh;
description=@item.descriptionTh;
			} else {
				name =@item.nameEn;
description=@item.descriptionEn;
			}
<div class="text-center matchHeight item">

    <figure class="snip1360  well">
        <img src="@item.image.src" alt="@item.id" class="img-responsive  img-center" />
        
 
        
        <figcaption>
            <h2>@name</h2>
            <p class="more">@description </p><a href="#modal" data-ArtPiecesMedia="@item.id" class="read-more EventModal">
                                                 @Umbraco.Field("#ReadMore")

                <div class="glass"></div>
            </a>
        </figcaption>
    </figure>
</div>

}

<!--Modal-->

<div id="modal" class="">

    <!--"THIS IS IMPORTANT! to close the modal, the class name has to match the name given on the ID-->
    @*<div id="btn-close-modal" class="close-modal ">
        CLOSE MODAL
    </div>*@

    <div id="btn-close-modal" class="close-modal text-center modalHead">
        <img class="closebt" src="~/Modules/animatedModal.js-master/closebt.svg" />
    </div>
    <section class="transformSkewY">
        @*modal-content*@
        <div class="text-center  ">
            <!--Your modal content goes here-->
            <img id="modal-img" src=" " />
          
              <h1 id="modal-head">-</h1>
            <h2 id="modal-subLv1">-</h2>
            <h3 id="modal-subLv2">-</h3>
            <p id="modal-content" style="width:70%">-</p>
        </div>
    </section>
</div>



<script src="~/Modules/jquery-match-height-master/dist/jquery.matchHeight-min.js"></script>


<!--SimpleModal-->

<link href="~/Modules/animatedModal.js-master/demo/css/animate.min.css" rel="stylesheet" />
    @*
<link href="~/Modules/animatedModal.js-master/demo/css/normalize.min.css" rel="stylesheet" />*@
<script src="~/Modules/animatedModal.js-master/animatedModal.js"></script>

<!--ReadMore-->
<link href="~/Modules/ReadMore/ReadMore.css" rel="stylesheet" />
<script src="~/Modules/ReadMore/ReadMore.js"></script>


<!--masonry-->
<link href="~/css/masonry Custom.css" rel="stylesheet" />

<!--Umbraco Component-->
<script src="~/Modules/UmbracoImage/UmbracoImage.js"></script>

<!--Hover Image-->
<link href="~/Modules/imagehover.css-master/css/imagehover.min.css" rel="stylesheet" />

<script>

    $(document).ready(function () {

        ReadMore.showMore = false;
        ReadMore.BindEvent();

        //Afert ReadMore
        //$('.matchHeight').matchHeight({
        //    byRow: true,
        //    property: 'height',
        //    //target: true,
        //    remove: false,
        //    //property: 'min-height'
        //});

        ModalEvent();

    });
    function ModalEvent() {

        //$('.EventModal').on('click', function () {

        //    $('.imagepreview').attr('src', $(this).find('img').attr('src'));
        //    $('#imagemodal').modal('show');
        //});

        //animatedIn: bounceIn
        //animatedOut: bounceOut
        $('.EventModal').on('click', function () {

            //$('#modal-head').html('');
            //$('#modal-subLv1').html('');
            //$('#modal-subLv2').html('');
            
            var head = $('#modal-head');
            var subLv1 = $('#modal-subLv1');
            var subLv2 = $('#modal-subLv2'); 
            var content = $('#modal-content');
            var img = $('#modal-img');
          
            head.html('');
            subLv1.html('');
            subLv2.html('');
            content.html('');




            //CallData
            var mediaID = $(this).attr("data-artpiecesmedia");

            //$('.imagepreview').attr('src', $(this).find('img').attr('src'));

            //GetMedia?id=5066
            var url = 'GetMedia?id=' + mediaID;
   
            CallServices(url, '', true, function (msg) {
                LoadCompelete();
                //Reder Data ListTemplate
                //console.log(msg);

                var description = '';
                var name = '';
                var Type = '';
                var data = msg
                //Custom
                function ConvertDataLangModal(data) {

                    for (var key in data) {
                        data[key]["description"] = data[key]["description" + preFixLang];
                        data[key]["name"] = data[key]["name" + preFixLang];
                        data[key]["artPieceType"] = data[key]["artPieceType"];
                        //data[key]["dimension"] = data[key]["dimension"];
                        //data[key]["dimension"] = data[key]["dimension"];
                    }


                }

                ConvertDataLangModal(data[0]);
                 
                head.html('-');
                subLv1.html('-');
                subLv2.html('-');
                content.html('-');


                //console.log(data[key]["name"]);
                //console.log(data[key]["artPieceType"]);
               
                if (data[0][0]["name"] != "")
                {
                    head.html(data[0][0]["name"]);
                }

                if (data[0][0]["artPieceType"] != "") {
                    subLv1.html(data[0][0]["artPieceType"]);
                }
          
                if (data[0][0]["dimension"] != "") {
                    subLv2.html(data[0][0]["dimension"]);
                }
                if (data[0][0]["description"] != "") {
                    content.html(data[0][0]["description"]);
                }
                
              
             

                var ImageUmbracoString = data[0][0]["image"];
                 
               var imgUrl = UmbracoImageUrl(ImageUmbracoString);
             
               img.attr('src', imgUrl);
               //$('.imagepreview').attr('src', $(this).find('img').attr('src'));
               
            });

        });

        $(".EventModal").animatedModal({
            modalTarget: 'modal',
            animatedIn: 'rollIn',
            animatedOut: 'rollOut',

            //animatedIn: 'fadeInUp',
            //animatedOut: 'fadeOutDown',
            //color: '#444444',

            //color: '',
            //color: 'rgba(109,109,112,0.9)',
            //color: 'rgba(50,50,50,.9)',
            color: 'rgba(33,33,33,.9)',

            // Callbacks
            beforeOpen: function () {
                // $('.imagepreview').attr('src', $(this).find('img').attr('src'));

                //console.log("The animation was called");
            },
            afterOpen: function () {
                //console.log("The animation is completed");
            },
            beforeClose: function () {
                //console.log("The animation was called");
            },
            afterClose: function () {
                //console.log("The animation is completed");
            }
        });

    }
</script>